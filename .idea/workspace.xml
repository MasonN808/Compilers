<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ChangeListManager">
    <list default="true" id="09be2472-735e-40a3-8730-a06afab31e7f" name="Default Changelist" comment="">
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Tests/opCodes1" beforeDir="false" afterPath="$PROJECT_DIR$/Tests/opCodes1" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/CodeGen.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/CodeGen.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/Compiler808.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/Compiler808.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/TreeST.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/TreeST.java" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Class" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="PREVIOUS_COMMIT_AUTHORS">
      <list>
        <option value="-" />
      </list>
    </option>
    <option name="RECENT_BRANCH_BY_REPOSITORY">
      <map>
        <entry key="$PROJECT_DIR$" value="semantic_analysis" />
      </map>
    </option>
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GitSEFilterConfiguration">
    <file-type-list>
      <filtered-out-file-type name="LOCAL_BRANCH" />
      <filtered-out-file-type name="REMOTE_BRANCH" />
      <filtered-out-file-type name="TAG" />
      <filtered-out-file-type name="COMMIT_BY_MESSAGE" />
    </file-type-list>
  </component>
  <component name="ProjectId" id="24oJdQLgUwk0mcnD8EjkPUHr46V" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">
    <property name="Downloaded.Files.Path.Enabled" value="false" />
    <property name="Repository.Attach.Annotations" value="false" />
    <property name="Repository.Attach.JavaDocs" value="false" />
    <property name="Repository.Attach.Sources" value="false" />
    <property name="RunOnceActivity.OpenProjectViewOnStart" value="true" />
    <property name="RunOnceActivity.ShowReadmeOnStart" value="true" />
    <property name="SHARE_PROJECT_CONFIGURATION_FILES" value="true" />
    <property name="SONARLINT_PRECOMMIT_ANALYSIS" value="true" />
    <property name="last_opened_file_path" value="$PROJECT_DIR$/../Algorithms_local" />
    <property name="project.structure.last.edited" value="Modules" />
    <property name="project.structure.proportion" value="0.0" />
    <property name="project.structure.side.proportion" value="0.0" />
    <property name="settings.editor.selected.configurable" value="preferences.pluginManager" />
  </component>
  <component name="RecentsManager">
    <key name="MoveFile.RECENT_KEYS">
      <recent name="C:\Users\Mason\IdeaProjects\Compilers_Local\src" />
      <recent name="C:\Users\Mason\IdeaProjects\Compilers_Local\Tests" />
      <recent name="C:\Users\Mason\IdeaProjects\Compilers_Local" />
    </key>
    <key name="MoveClassesOrPackagesDialog.RECENTS_KEY">
      <recent name="" />
    </key>
    <key name="CopyClassDialog.RECENTS_KEY">
      <recent name="" />
    </key>
  </component>
  <component name="RunManager" selected="Application.Compiler808">
    <configuration name="Compiler808" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="Compiler808" />
      <module name="Compilers_Local" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="LineSepDebug" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="LineSepDebug" />
      <module name="Compilers_Local" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Application.Compiler808" />
        <item itemvalue="Application.LineSepDebug" />
        <item itemvalue="Application.LineSepDebug" />
        <item itemvalue="Application.Compiler808" />
        <item itemvalue="Application.Compiler808" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="09be2472-735e-40a3-8730-a06afab31e7f" name="Default Changelist" comment="" />
      <created>1644291092254</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1644291092254</updated>
    </task>
    <task id="LOCAL-00163" summary="-Added &quot;true&quot; and &quot;false&quot; into heap">
      <created>1652400060887</created>
      <option name="number" value="00163" />
      <option name="presentableId" value="LOCAL-00163" />
      <option name="project" value="LOCAL" />
      <updated>1652400060888</updated>
    </task>
    <task id="LOCAL-00164" summary="-Added backpatching (works)">
      <created>1652403350174</created>
      <option name="number" value="00164" />
      <option name="presentableId" value="LOCAL-00164" />
      <option name="project" value="LOCAL" />
      <updated>1652403350174</updated>
    </task>
    <task id="LOCAL-00165" summary="-Updated backpatching (works better)&#10;-Edited data entry implementation&#10;-Major Edits to the string case for assignment&#10;-added other attributes to constructor of dataEntry&#10;-added scope to IdDetails, although unneeded&#10;-changes to hashtable due to edits in IdDetails">
      <created>1652407091694</created>
      <option name="number" value="00165" />
      <option name="presentableId" value="LOCAL-00165" />
      <option name="project" value="LOCAL" />
      <updated>1652407091694</updated>
    </task>
    <task id="LOCAL-00166" summary="I think the pointers from heap works now">
      <created>1652408994199</created>
      <option name="number" value="00166" />
      <option name="presentableId" value="LOCAL-00166" />
      <option name="project" value="LOCAL" />
      <updated>1652408994199</updated>
    </task>
    <task id="LOCAL-00167" summary="Fixed pointer from heap: had to fix indexing issue">
      <created>1652409599003</created>
      <option name="number" value="00167" />
      <option name="presentableId" value="LOCAL-00167" />
      <option name="project" value="LOCAL" />
      <updated>1652409599003</updated>
    </task>
    <task id="LOCAL-00168" summary="Making assignment op code generator more dynamic&#10;-checking ids in int expressions now">
      <created>1652414453937</created>
      <option name="number" value="00168" />
      <option name="presentableId" value="LOCAL-00168" />
      <option name="project" value="LOCAL" />
      <updated>1652414453937</updated>
    </task>
    <task id="LOCAL-00169" summary="-int exprs work without ids implementing that now">
      <created>1652421414465</created>
      <option name="number" value="00169" />
      <option name="presentableId" value="LOCAL-00169" />
      <option name="project" value="LOCAL" />
      <updated>1652421414465</updated>
    </task>
    <task id="LOCAL-00170" summary="-More">
      <created>1652431456966</created>
      <option name="number" value="00170" />
      <option name="presentableId" value="LOCAL-00170" />
      <option name="project" value="LOCAL" />
      <updated>1652431456966</updated>
    </task>
    <task id="LOCAL-00171" summary="-More">
      <created>1652434603996</created>
      <option name="number" value="00171" />
      <option name="presentableId" value="LOCAL-00171" />
      <option name="project" value="LOCAL" />
      <updated>1652434603996</updated>
    </task>
    <task id="LOCAL-00172" summary="-More">
      <created>1652435499441</created>
      <option name="number" value="00172" />
      <option name="presentableId" value="LOCAL-00172" />
      <option name="project" value="LOCAL" />
      <updated>1652435499441</updated>
    </task>
    <task id="LOCAL-00173" summary="-Added print statements for verbose mode&#10;-On an airplane">
      <created>1652557482006</created>
      <option name="number" value="00173" />
      <option name="presentableId" value="LOCAL-00173" />
      <option name="project" value="LOCAL" />
      <updated>1652557482007</updated>
    </task>
    <task id="LOCAL-00174" summary="- Added method information&#10;- implemented the stack overflow error">
      <created>1652559683342</created>
      <option name="number" value="00174" />
      <option name="presentableId" value="LOCAL-00174" />
      <option name="project" value="LOCAL" />
      <updated>1652559683342</updated>
    </task>
    <task id="LOCAL-00175" summary="- Added more method information">
      <created>1652561026421</created>
      <option name="number" value="00175" />
      <option name="presentableId" value="LOCAL-00175" />
      <option name="project" value="LOCAL" />
      <updated>1652561026422</updated>
    </task>
    <task id="LOCAL-00176" summary="- Added check heap overflow when assigining Op codes&#10;- Still on plane&#10;- Finishing at home">
      <created>1652562041022</created>
      <option name="number" value="00176" />
      <option name="presentableId" value="LOCAL-00176" />
      <option name="project" value="LOCAL" />
      <updated>1652562041022</updated>
    </task>
    <task id="LOCAL-00177" summary="- Made own method for backpatching&#10;- Edited the heapoverflow in vardecals">
      <created>1652594115152</created>
      <option name="number" value="00177" />
      <option name="presentableId" value="LOCAL-00177" />
      <option name="project" value="LOCAL" />
      <updated>1652594115152</updated>
    </task>
    <task id="LOCAL-00178" summary="- Completely redid assignment op codes&#10;- Needs more dubugging&#10;- The following now works:&#10;{&#10; string a&#10; {&#10;     a = &quot;string&quot;&#10; }&#10; }$">
      <created>1652600174930</created>
      <option name="number" value="00178" />
      <option name="presentableId" value="LOCAL-00178" />
      <option name="project" value="LOCAL" />
      <updated>1652600174930</updated>
    </task>
    <task id="LOCAL-00179" summary="- About to completely redo the depth first post-order traversal method, POT()">
      <created>1652600870497</created>
      <option name="number" value="00179" />
      <option name="presentableId" value="LOCAL-00179" />
      <option name="project" value="LOCAL" />
      <updated>1652600870497</updated>
    </task>
    <task id="LOCAL-00180" summary="- Now about to completely redo the depth first post-order traversal method, POT()&#10;- Made significant edits in print to allow for literals&#10;- Added meaningful verbose mode">
      <created>1652604155084</created>
      <option name="number" value="00180" />
      <option name="presentableId" value="LOCAL-00180" />
      <option name="project" value="LOCAL" />
      <updated>1652604155085</updated>
    </task>
    <task id="LOCAL-00181" summary="- Now about to completely redo the depth first post-order traversal method, POT()&#10;- Significant progress in embedded blocks with differing declarations and assignments with print statements&#10;- Working on more complicated assignments and boolean expressions">
      <created>1652608022341</created>
      <option name="number" value="00181" />
      <option name="presentableId" value="LOCAL-00181" />
      <option name="project" value="LOCAL" />
      <updated>1652608022341</updated>
    </task>
    <task id="LOCAL-00182" summary="- Working on assignment of digits with ids in intexpression&#10;- Next is boolean ops">
      <created>1652612694206</created>
      <option name="number" value="00182" />
      <option name="presentableId" value="LOCAL-00182" />
      <option name="project" value="LOCAL" />
      <updated>1652612694206</updated>
    </task>
    <task id="LOCAL-00183" summary="- assignment of digits with ids in intexpression works now&#10;- Now is boolean ops">
      <created>1652640570091</created>
      <option name="number" value="00183" />
      <option name="presentableId" value="LOCAL-00183" />
      <option name="project" value="LOCAL" />
      <updated>1652640570091</updated>
    </task>
    <task id="LOCAL-00184" summary="- refactored POT&#10;- Now working on boolean ops">
      <created>1652641598392</created>
      <option name="number" value="00184" />
      <option name="presentableId" value="LOCAL-00184" />
      <option name="project" value="LOCAL" />
      <updated>1652641598392</updated>
    </task>
    <task id="LOCAL-00185" summary="- Takes into account simple boolean assignments">
      <created>1652645276690</created>
      <option name="number" value="00185" />
      <option name="presentableId" value="LOCAL-00185" />
      <option name="project" value="LOCAL" />
      <updated>1652645276690</updated>
    </task>
    <task id="LOCAL-00186" summary="- Can now print simple boolean assignments referenced from ID or boolean literal (not embedded booleans yet)">
      <created>1652646514454</created>
      <option name="number" value="00186" />
      <option name="presentableId" value="LOCAL-00186" />
      <option name="project" value="LOCAL" />
      <updated>1652646514454</updated>
    </task>
    <task id="LOCAL-00187" summary="- recognizes boolean expression assignments with boolean operator, equality, not yet inequality but easy fix&#10;- Added constructor for JumpEntry&#10;- Added backpropogation for jump entries&#10;- Added setter methods for incrementing indexes of jump and jump values">
      <created>1652666504607</created>
      <option name="number" value="00187" />
      <option name="presentableId" value="LOCAL-00187" />
      <option name="project" value="LOCAL" />
      <updated>1652666504607</updated>
    </task>
    <task id="LOCAL-00188" summary="- Inequality operator is now recognized on simple boolean expressions">
      <created>1652667723513</created>
      <option name="number" value="00188" />
      <option name="presentableId" value="LOCAL-00188" />
      <option name="project" value="LOCAL" />
      <updated>1652667723513</updated>
    </task>
    <task id="LOCAL-00189" summary="- Major edits to print statements of boolean literals and int expressions with no ID at end&#10;- Had to change from A9 to A0 to pull from Y register for printing">
      <created>1652672452832</created>
      <option name="number" value="00189" />
      <option name="presentableId" value="LOCAL-00189" />
      <option name="project" value="LOCAL" />
      <updated>1652672452832</updated>
    </task>
    <task id="LOCAL-00190" summary="- Simple if statement works&#10;- Issues with inequality operator in if statement">
      <created>1652688635371</created>
      <option name="number" value="00190" />
      <option name="presentableId" value="LOCAL-00190" />
      <option name="project" value="LOCAL" />
      <updated>1652688635371</updated>
    </task>
    <task id="LOCAL-00191" summary="- If statement works with correct jumps, however I need to redo the way boolean expressions are generated.  If I can fix that, my if and while statements will generate properly">
      <created>1652689262556</created>
      <option name="number" value="00191" />
      <option name="presentableId" value="LOCAL-00191" />
      <option name="project" value="LOCAL" />
      <updated>1652689262556</updated>
    </task>
    <task id="LOCAL-00192" summary="- If statement works with correct jumps, however I need to redo the way boolean expressions are generated.  If I can fix that, my if and while statements will generate properly&#10;- Will continue to work on the bugs until graded">
      <created>1652690021950</created>
      <option name="number" value="00192" />
      <option name="presentableId" value="LOCAL-00192" />
      <option name="project" value="LOCAL" />
      <updated>1652690021950</updated>
    </task>
    <task id="LOCAL-00193" summary="- Working on bugs in string comparisons">
      <created>1652732153281</created>
      <option name="number" value="00193" />
      <option name="presentableId" value="LOCAL-00193" />
      <option name="project" value="LOCAL" />
      <updated>1652732153281</updated>
    </task>
    <task id="LOCAL-00194" summary="- About to do some major refactoring to reduce complexity of code for better dubugging">
      <created>1652733215520</created>
      <option name="number" value="00194" />
      <option name="presentableId" value="LOCAL-00194" />
      <option name="project" value="LOCAL" />
      <updated>1652733215520</updated>
    </task>
    <task id="LOCAL-00195" summary="- Completely refactored code and logic reducing 500 lines">
      <created>1652737027908</created>
      <option name="number" value="00195" />
      <option name="presentableId" value="LOCAL-00195" />
      <option name="project" value="LOCAL" />
      <updated>1652737027908</updated>
    </task>
    <task id="LOCAL-00196" summary="- Initialized Quasi Breadth first in order traversal for embedded boolean expressions">
      <created>1652741075892</created>
      <option name="number" value="00196" />
      <option name="presentableId" value="LOCAL-00196" />
      <option name="project" value="LOCAL" />
      <updated>1652741075892</updated>
    </task>
    <task id="LOCAL-00197" summary="- Added method and implemented it to find strings in memory that have already been declared to reduce memory usage in heap (probably an optimization)">
      <created>1652746506549</created>
      <option name="number" value="00197" />
      <option name="presentableId" value="LOCAL-00197" />
      <option name="project" value="LOCAL" />
      <updated>1652746506549</updated>
    </task>
    <task id="LOCAL-00198" summary="- Added more code for the stringExpr">
      <created>1652747188820</created>
      <option name="number" value="00198" />
      <option name="presentableId" value="LOCAL-00198" />
      <option name="project" value="LOCAL" />
      <updated>1652747188820</updated>
    </task>
    <task id="LOCAL-00199" summary="- About to add in QBFS()&#10;- Rollback if horrible here">
      <created>1652752460764</created>
      <option name="number" value="00199" />
      <option name="presentableId" value="LOCAL-00199" />
      <option name="project" value="LOCAL" />
      <updated>1652752460764</updated>
    </task>
    <task id="LOCAL-00200" summary="- Starting to perform better">
      <created>1652770867384</created>
      <option name="number" value="00200" />
      <option name="presentableId" value="LOCAL-00200" />
      <option name="project" value="LOCAL" />
      <updated>1652770867384</updated>
    </task>
    <task id="LOCAL-00201" summary="- boolean statements compatable with boolean expressions (not embedded) (commutativity holds for all simple cases)">
      <created>1652771548193</created>
      <option name="number" value="00201" />
      <option name="presentableId" value="LOCAL-00201" />
      <option name="project" value="LOCAL" />
      <updated>1652771548193</updated>
    </task>
    <task id="LOCAL-00202" summary="- Took into account inequalities&#10;- only issue lies in the ast where the tree structure is not optimal for recursion">
      <created>1652778064349</created>
      <option name="number" value="00202" />
      <option name="presentableId" value="LOCAL-00202" />
      <option name="project" value="LOCAL" />
      <updated>1652778064349</updated>
    </task>
    <task id="LOCAL-00203" summary="- Took into account inequalities&#10;- only issue lies in the ast where the tree structure is not optimal for recursion (more specifically --&gt; complex integer expression on the left-hand side of a boolean operator">
      <created>1652778182091</created>
      <option name="number" value="00203" />
      <option name="presentableId" value="LOCAL-00203" />
      <option name="project" value="LOCAL" />
      <updated>1652778182091</updated>
    </task>
    <task id="LOCAL-00204" summary="- ISSUE FIXED only issue lies in the ast where the tree structure is not optimal for recursion (more specifically --&gt; complex integer expression on the left-hand side of a boolean operator&#10;- Moving onto while loops">
      <created>1652778663584</created>
      <option name="number" value="00204" />
      <option name="presentableId" value="LOCAL-00204" />
      <option name="project" value="LOCAL" />
      <updated>1652778663584</updated>
    </task>
    <task id="LOCAL-00205" summary="- Added more test cases&#10;- some issues in jumping in while loop">
      <created>1652782930157</created>
      <option name="number" value="00205" />
      <option name="presentableId" value="LOCAL-00205" />
      <option name="project" value="LOCAL" />
      <updated>1652782930157</updated>
    </task>
    <task id="LOCAL-00206" summary="- Fixed POTFirstDigit pointer that conintually did carry in other statements">
      <created>1652822677036</created>
      <option name="number" value="00206" />
      <option name="presentableId" value="LOCAL-00206" />
      <option name="project" value="LOCAL" />
      <updated>1652822677037</updated>
    </task>
    <task id="LOCAL-00207" summary="- Got the while loop to loop back but opcodes are wrong in the loop (fixing)&#10;- runs in console">
      <created>1652825433391</created>
      <option name="number" value="00207" />
      <option name="presentableId" value="LOCAL-00207" />
      <option name="project" value="LOCAL" />
      <updated>1652825433392</updated>
    </task>
    <task id="LOCAL-00208" summary="- While loop fixed!  however endless loop continues&#10;- runs in console">
      <created>1652826244510</created>
      <option name="number" value="00208" />
      <option name="presentableId" value="LOCAL-00208" />
      <option name="project" value="LOCAL" />
      <updated>1652826244510</updated>
    </task>
    <task id="LOCAL-00209" summary="- Fixed the endless while loop issues by changing the jumps in the intermediate op codes&#10;- runs in console">
      <created>1652826708705</created>
      <option name="number" value="00209" />
      <option name="presentableId" value="LOCAL-00209" />
      <option name="project" value="LOCAL" />
      <updated>1652826708705</updated>
    </task>
    <task id="LOCAL-00210" summary="- Now works for while loops in multiple scopes&#10;- runs in console">
      <created>1652829785152</created>
      <option name="number" value="00210" />
      <option name="presentableId" value="LOCAL-00210" />
      <option name="project" value="LOCAL" />
      <updated>1652829785152</updated>
    </task>
    <task id="LOCAL-00211" summary="- Issues with more than one scope in another scope&#10;- runs in console">
      <created>1652835255930</created>
      <option name="number" value="00211" />
      <option name="presentableId" value="LOCAL-00211" />
      <option name="project" value="LOCAL" />
      <updated>1652835255930</updated>
    </task>
    <option name="localTasksCounter" value="212" />
    <servers />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State>
              <option name="FILTERS">
                <map>
                  <entry key="branch">
                    <value>
                      <list>
                        <option value="code_gen" />
                      </list>
                    </value>
                  </entry>
                </map>
              </option>
            </State>
          </value>
        </entry>
      </map>
    </option>
    <option name="oldMeFiltersMigrated" value="true" />
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="- Inequality operator is now recognized on simple boolean expressions" />
    <MESSAGE value="- Major edits to print statements of boolean literals and int expressions with no ID at end&#10;- Had to change from A9 to A0 to pull from Y register for printing" />
    <MESSAGE value="- Simple if statement works&#10;- Issues with inequality operator in if statement" />
    <MESSAGE value="- If statement works with correct jumps, however I need to redo the way boolean expressions are generated.  If I can fix that, my if and while statements will generate properly" />
    <MESSAGE value="- If statement works with correct jumps, however I need to redo the way boolean expressions are generated.  If I can fix that, my if and while statements will generate properly&#10;- Will continue to work on the bugs until graded" />
    <MESSAGE value="- Working on bugs in string comparisons" />
    <MESSAGE value="- About to do some major refactoring to reduce complexity of code for better dubugging" />
    <MESSAGE value="- Completely refactored code and logic reducing 500 lines" />
    <MESSAGE value="- Initialized Quasi Breadth first in order traversal for embedded boolean expressions" />
    <MESSAGE value="- Added method and implemented it to find strings in memory that have already been declared to reduce memory usage in heap (probably an optimization)" />
    <MESSAGE value="- Added more code for the stringExpr" />
    <MESSAGE value="- About to add in QBFS()&#10;- Rollback if horrible" />
    <MESSAGE value="- About to add in QBFS()&#10;- Rollback if horrible here" />
    <MESSAGE value="- Starting to perform better" />
    <MESSAGE value="- boolean statements compatable with boolean expressions (not embedded) (commutativity holds for all simple cases)" />
    <MESSAGE value="- Took into account inequalities&#10;- only issue lies in the ast where the tree structure is not optimal for recursion" />
    <MESSAGE value="- Took into account inequalities&#10;- only issue lies in the ast where the tree structure is not optimal for recursion (more specifically --&gt; complex integer expression on the left-hand side of a boolean operator" />
    <MESSAGE value="- ISSUE FIXED only issue lies in the ast where the tree structure is not optimal for recursion (more specifically --&gt; complex integer expression on the left-hand side of a boolean operator&#10;- Moving onto while loops" />
    <MESSAGE value="- Added more test cases&#10;- some issues in jumping in while loop" />
    <MESSAGE value="- Fixed POTFirstDigit pointer that conintually did carry in other statements" />
    <MESSAGE value="- Got the while loop to loop back but opcodes are wrong in the loop (fixing)&#10;- runs in console" />
    <MESSAGE value="- While loop fixed!  however endless loop continues&#10;- runs in console" />
    <MESSAGE value="- Fixed the endless while loop issues by changing the jumps in the intermediate op codes&#10;- runs in console" />
    <MESSAGE value="- Now works for while loops in multiple scopes&#10;- runs in console" />
    <MESSAGE value="- Issues with more than one scope in another scope&#10;- runs in console" />
    <option name="LAST_COMMIT_MESSAGE" value="- Issues with more than one scope in another scope&#10;- runs in console" />
  </component>
</project>