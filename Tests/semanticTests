
/* Program 0 */
/* No errors */
{
 int a
 boolean b
 {
 string c
 a = 5
 b = true /* no comment */
 c = "inta"
 print(c)
 }
 print(b)
 print(a)
}$


/* Program 01 */
/* No errors */
/* never used warning for [a] */
{
 int a {
 a = 1 }
 print("hi there")
}$


/* Program 02 */
/* No errors */
{
 int a {
 boolean b {
 string c {
 a = 5
 b = false
 c = "inta" }
 print(c) }
 print(b) }
 print(a)
}$


/* Program 03 */
/* some test cases from hall of fame projects below */
/* Obviously missing variable declarations, but still a good test for your tree.  Also has long integer expressions*/
/* Undeclared Identifier errors */

  {
    {
        x = 1 + 2 + 3
          y = 6 + 7
          p = 1
          o = 9 + 8 + "jjj"
          w = 4 + 5 + 0
      }

    a = 1
    b = 1 + 2
      c = 3 + 4 + 5
      d = 5 + 6 + 7
      e = 7 + 8
      f = 9

      {
        z = 1 + 2 + 3 + 4 + 5 + 6 + 7 + 9
      }
  }$


/* Program 04 */
/* Variables being used but not declared first */
/* Undeclared Error for [b]*/
/* Uninitialized Warning for [a] */

{
int a
b = 4
}$


/* Program 05 */
/* Variables being declared again in same scope*/
/* Redeclared errors */
{
int a
{
string a
a = "this is fine"
}
boolean a /* this is not fine" */
}$


/* Program 06 */
/* A variable's type is not compatible with its assignment*/
/* Type Mismatch Error: Expected [string] */
{
string s
s = 4 + 3
}$


/* Program 07 */
/* Types do not match in Boolean comparison*/
{
int a
a = 1
print(a)
if(4 == false){
print("this no good")
}
if(4 == "hey"){
print("int to string")
}
if(false != "hey"){
print("bool to string")
}
if(4 != 3){
print("int to int")
}
}$



/* Program 08 */
/* A digit is added to something other than a digit */
{
int a
a = 4 + false
}$


/* Program 09 */
/* Obviously missing varible decalarations, but still a good test for your tree */
{
  {
      x = "abc"
        y = "e"
        p = "fghijklm"
        o = "nop"
        w = "qrstuvwxyz"
    }

  a = "qrstuvwxyz"
  b = "nop"
    c = "e"
    d = "fghijklm"
    e = "abc"
    f = "z"
    {
      z = "abcdefghijklmnopqrstuvwxyz"
    }
}$

/* Program 10 */
/* Semantically incorrect, but make sure your AST structure is correct */
{
  /* This is technically syntactically correct, though semantically is full of issues */
  r = 1 + (true == (1 != "hi"))
  /* Testing scopes as well... */
{
    x = "abc"
      y = "e"
      p = 1 + true
      w = "qrstuvwxyz"
      /* How 'bout another scope? */
      {
          x = 1 + 2 + 3
          y = 6 + 7
          p = 1

          /* Tricky, but syntactically valid */
          o = 9 + (false != ("a" == "a"))
          w = 4 + 5 + 0
      }
  }

  a = 1
  b = 1 + 2
  a = "qrstuvwxyz"
  d = "fghijklm"
  e = "abc"
  f = "z"
  d = 5 + 6 + 7
  e = 7 + 8
  /* Has your computer blown up yet? */
  {
      /* Some easy tests now */
    z = "abcdefghijklmnopqrstuvwxyz"
      z = 1 + 2 + 3 + 4 + 5 + 6 + 7 + 9
      z = (true == (false == ("a" != "b")))
  }
}$

/* Program 11 */
/* This should ouput error: type mismatch */
{

z = ("true" == (false == ("a" != "b")))
}$



/* Program 12 */
/* This shouldn't work with type mismatch */
{
int z
z = (true == (false == ("a" != "b")))
}$



/* Program 13 */
/* This should work without type mismatch */
{
boolean z
z = (true == (false == ("a" != "b")))
}$

/* Program 14 */
/* This should not work with type mismatch and undeclared*/
{
z = 4 + false
}$

/* Program 15 */
/* This should not work with type mismatch and undeclared*/
{
v = 5 + false
q = ("true" == (false == ("a" != "b")))

if(a == (false == ("a" != "b"))){
int x
}

y = (true == (false == ("a" != "b")))
}$


